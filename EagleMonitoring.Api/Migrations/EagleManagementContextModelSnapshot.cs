// <auto-generated />
using System;
using EagleMonitoring.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EagleMonitoring.Api.Migrations
{
    [DbContext(typeof(EagleManagementContext))]
    partial class EagleManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("EagleMonitoring.Api.Model.Eagle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TagNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TagNumber")
                        .IsUnique();

                    b.ToTable("Eagles");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.EagleAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EagleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FeederId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EagleId");

                    b.HasIndex("FeederId");

                    b.ToTable("EagleAssignments");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.FeedingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EagleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FeederId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FeedingTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FoodType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EagleId");

                    b.HasIndex("FeederId");

                    b.ToTable("FeedingLogs");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.HealthRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EagleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("VetNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EagleId");

                    b.ToTable("HealthRecords");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.EagleAssignment", b =>
                {
                    b.HasOne("EagleMonitoring.Api.Model.Eagle", "Eagle")
                        .WithMany("EagleAssignments")
                        .HasForeignKey("EagleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EagleMonitoring.Api.Model.User", "Feeder")
                        .WithMany("EagleAssignments")
                        .HasForeignKey("FeederId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eagle");

                    b.Navigation("Feeder");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.FeedingLog", b =>
                {
                    b.HasOne("EagleMonitoring.Api.Model.Eagle", "Eagle")
                        .WithMany("FeedingLogs")
                        .HasForeignKey("EagleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EagleMonitoring.Api.Model.User", "Feeder")
                        .WithMany("FeedingLogs")
                        .HasForeignKey("FeederId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eagle");

                    b.Navigation("Feeder");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.HealthRecord", b =>
                {
                    b.HasOne("EagleMonitoring.Api.Model.Eagle", "Eagle")
                        .WithMany("HealthRecords")
                        .HasForeignKey("EagleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eagle");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.Eagle", b =>
                {
                    b.Navigation("EagleAssignments");

                    b.Navigation("FeedingLogs");

                    b.Navigation("HealthRecords");
                });

            modelBuilder.Entity("EagleMonitoring.Api.Model.User", b =>
                {
                    b.Navigation("EagleAssignments");

                    b.Navigation("FeedingLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
